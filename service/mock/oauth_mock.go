// Code generated by MockGen. DO NOT EDIT.
// Source: ./oauth.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
)

// MockAuthService is a mock of AuthService interface.
type MockAuthService struct {
	ctrl     *gomock.Controller
	recorder *MockAuthServiceMockRecorder
}

// MockAuthServiceMockRecorder is the mock recorder for MockAuthService.
type MockAuthServiceMockRecorder struct {
	mock *MockAuthService
}

// NewMockAuthService creates a new mock instance.
func NewMockAuthService(ctrl *gomock.Controller) *MockAuthService {
	mock := &MockAuthService{ctrl: ctrl}
	mock.recorder = &MockAuthServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAuthService) EXPECT() *MockAuthServiceMockRecorder {
	return m.recorder
}

// AutoRefreshToken mocks base method.
func (m *MockAuthService) AutoRefreshToken() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AutoRefreshToken")
	ret0, _ := ret[0].(error)
	return ret0
}

// AutoRefreshToken indicates an expected call of AutoRefreshToken.
func (mr *MockAuthServiceMockRecorder) AutoRefreshToken() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AutoRefreshToken", reflect.TypeOf((*MockAuthService)(nil).AutoRefreshToken))
}

// GetAccessToken mocks base method.
func (m *MockAuthService) GetAccessToken() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAccessToken")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetAccessToken indicates an expected call of GetAccessToken.
func (mr *MockAuthServiceMockRecorder) GetAccessToken() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAccessToken", reflect.TypeOf((*MockAuthService)(nil).GetAccessToken))
}

// StartAutoRefresh mocks base method.
func (m *MockAuthService) StartAutoRefresh(accessToken, refreshToken string, t time.Duration) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "StartAutoRefresh", accessToken, refreshToken, t)
}

// StartAutoRefresh indicates an expected call of StartAutoRefresh.
func (mr *MockAuthServiceMockRecorder) StartAutoRefresh(accessToken, refreshToken, t interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StartAutoRefresh", reflect.TypeOf((*MockAuthService)(nil).StartAutoRefresh), accessToken, refreshToken, t)
}
